name: Automation Tests
on:
  # push:
  #   branches:
  #     - master
  workflow_dispatch:
    inputs:
      env:
        type: choice
        description: 'Select the Environment to run test against'
        required: true
        options:
          - dev
          - stage
      test_type:
        type: choice
        description: 'Select the type of test to run'
        required: true
        options:
          - ui
          - api
          - pt
      product:
        type: choice
        description: 'Select different product (demo and test) for testing purposes'
        required: true
        options:
          - demo
          - test
env:
  TEST_TYPE: ${{ github.event.inputs.test_type }}
  
  PLAYWRIGHT_JSON_OUTPUT_NAME: 'results.json'

jobs:
  Run_Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Login to Amazon ECR registry
        id: login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pull Docker image from Amazon ECR
        run: docker pull ${ECR_REGISTRY}/coincover:latest
        env:
          ECR_REGISTRY: ${{ steps.login.outputs.registry }}

      - name: Install dependencies
        run: npm install
        
      - name: Run Test, Generate Report & Upload to S3
        run: |
          docker run \
          -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          -e AWS_REGION=${{ secrets.AWS_REGION }} \
          -e USER_NAME=${{ github.actor }} \
          -v "$(pwd)":/app \
          "${ECR_REGISTRY}/coincover:latest" --env "${{ github.event.inputs.env }}" --type "${{ github.event.inputs.test_type }}" --product "${{ github.event.inputs.product }}" --file demo
        env:
          ECR_REGISTRY: ${{ steps.login.outputs.registry }}
    # steps:
    #   - uses: actions/checkout@v2

    #   - name: Configure AWS credentials
    #     uses: aws-actions/configure-aws-credentials@v1
    #     with:
    #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       aws-region: us-east-1

    #   - name: Login to ECR
    #     id: login-ecr
    #     uses: aws-actions/amazon-ecr-login@v1

    #   # - name: Pull image from ECR
    #   #   run: |
    #   #     docker pull ${{ steps.login-ecr.outputs.registry }}/my-ecr-repo:my-tag

    #   - name: Run container on EC2
    #     uses: appleboy/ssh-action@master
    #     with:
    #       host: ${ { secrets.HOST_DNS }}
    #       username: ${ { secrets.USERNAME }}
    #       key: ${ { secrets.EC2_SSH_KEY }}
    #       script: |
    #         chmod +x ./build-push.sh
    #         ./run-load-test.sh
